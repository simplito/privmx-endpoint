set(PRIVMX_NET "POCO" CACHE STRING "Net module")
option(PRIVMX_ENABLE_NET_POCO "Enable NET Poco" OFF)
option(PRIVMX_ENABLE_NET_EMSCRIPTEN "Enable NET Emscripten" OFF)
option(PRIVMX_ENABLE_NET_DRIVER "Enable NET driver" OFF)

if(PRIVMX_EMSCRIPTEN)
    set(PRIVMX_NET "EMSCRIPTEN")
endif()

if(PRIVMX_DRIVER_NET)
    set(PRIVMX_NET "DRIVER")
endif()

message(STATUS "PRIVMX_NET=${PRIVMX_NET}")

if(PRIVMX_NET STREQUAL "POCO")
    set(PRIVMX_ENABLE_NET_POCO ON)
elseif(PRIVMX_NET STREQUAL "EMSCRIPTEN")
    set(PRIVMX_ENABLE_NET_EMSCRIPTEN ON)
elseif(PRIVMX_NET STREQUAL "DRIVER")
    set(PRIVMX_ENABLE_NET_DRIVER ON)
endif()

file(GLOB_RECURSE SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/base/src/*.cpp)
set(INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/base/include ${CMAKE_CURRENT_BINARY_DIR}/include)
set(LIBS "")

if(PRIVMX_ENABLE_NET_POCO)
    file(GLOB_RECURSE SOURCES_POCO ${CMAKE_CURRENT_SOURCE_DIR}/poco/src/*.cpp)
    list(APPEND SOURCES ${SOURCES_POCO})
    list(APPEND INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/poco/include)
    list(APPEND LIBS Poco::Net Poco::NetSSL)
    if(PRIVMX_INSTALL_PRIVATE_HEADERS)
        install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/poco/include/privmx DESTINATION include)
    endif()
endif(PRIVMX_ENABLE_NET_POCO)

if(PRIVMX_ENABLE_NET_EMSCRIPTEN)
    file(GLOB_RECURSE SOURCES_EMSCRIPTEN ${CMAKE_CURRENT_SOURCE_DIR}/emscripten/src/*.cpp)
    list(APPEND SOURCES ${SOURCES_EMSCRIPTEN})
    list(APPEND INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/emscripten/include)
    if(PRIVMX_INSTALL_PRIVATE_HEADERS)
        install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/emscripten/include/privmx DESTINATION include)
    endif()
endif(PRIVMX_ENABLE_NET_EMSCRIPTEN)

if(PRIVMX_ENABLE_NET_DRIVER)
    file(GLOB_RECURSE SOURCES_DRIVER ${CMAKE_CURRENT_SOURCE_DIR}/driver/src/*.cpp)
    list(APPEND SOURCES ${SOURCES_DRIVER})
    list(APPEND INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/driver/include)
    list(APPEND LIBS privmxdrvnet)
    if(PRIVMX_INSTALL_PRIVATE_HEADERS)
        install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/driver/include/privmx DESTINATION include)
    endif()
endif(PRIVMX_ENABLE_NET_DRIVER)

configure_file(${CMAKE_CURRENT_SOURCE_DIR}/base/include/privmx/rpc/RpcConfig.hpp.in ${CMAKE_CURRENT_BINARY_DIR}/include/privmx/rpc/RpcConfig.hpp @ONLY)
if(PRIVMX_INSTALL_PRIVATE_HEADERS)
    install(FILES ${CMAKE_CURRENT_BINARY_DIR}/include/privmx/rpc/RpcConfig.hpp DESTINATION include/privmx/rpc)
endif()

add_library(privmxrpc OBJECT ${SOURCES})

if(PRIVMX_EMSCRIPTEN)
    target_link_options(privmxrpc PUBLIC "SHELL:--js-library \"${PROJECT_SOURCE_DIR}/emscripten/jslibrary/websocket.js\" -lembind")
endif()

target_include_directories(privmxrpc PUBLIC ${INCLUDE_DIRS})
target_compile_options(privmxrpc PRIVATE -fPIC -Wall -Wextra -Wno-narrowing)
target_link_libraries(privmxrpc PUBLIC Poco::Foundation privmxutils privmxcrypto ${LIBS})
if(BUILD_SHARED_LIBS)
    set_target_properties(privmxrpc PROPERTIES POSITION_INDEPENDENT_CODE True)
endif()
if(PRIVMX_INSTALL_PRIVATE_HEADERS)
    install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/base/include/privmx DESTINATION include)
endif()
if(PRIVMX_WERROR)
    target_compile_options(privmxrpc PRIVATE -Werror)
endif()
