file(GLOB_RECURSE SOURCES ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
set(INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(INCLUDE_PUB_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/include_pub)

if(BUILD_SHARED_LIBS)
    add_library(privmxendpointcrypto SHARED ${SOURCES})
else()
    add_library(privmxendpointcrypto STATIC ${SOURCES})
endif()
target_include_directories(privmxendpointcrypto PUBLIC ${INCLUDE_DIRS} PUBLIC ${INCLUDE_PUB_DIRS})
target_compile_options(privmxendpointcrypto PRIVATE -fPIC -Wall -Wextra)
target_link_libraries(privmxendpointcrypto PRIVATE Poco::Foundation privmx privmxendpointcore)
if(BUILD_SHARED_LIBS)
    set_target_properties(privmxendpointcrypto PROPERTIES POSITION_INDEPENDENT_CODE True)
endif()
install(TARGETS privmxendpointcrypto DESTINATION lib)
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include_pub/privmx DESTINATION include)
if(PRIVMX_INSTALL_PRIVATE_HEADERS)
    install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/privmx DESTINATION include)
endif()
if(PRIVMX_WERROR)
    target_compile_options(privmxendpointcrypto PRIVATE -Werror)
endif()
set_target_properties(privmxendpointcrypto PROPERTIES COMPILE_DEFINITIONS "MINIMAL_BUILD")

if(PRIVMX_BUILD_ENDPOINT_INTERFACE)
    add_subdirectory(cinterface)
endif(PRIVMX_BUILD_ENDPOINT_INTERFACE)
